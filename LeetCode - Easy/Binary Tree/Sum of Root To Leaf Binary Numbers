/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    ArrayList<String> nums = new ArrayList();
    public int sumRootToLeaf(TreeNode root) {
        int sum=0;
        if(root==null)
        {
            return 0;
        }
        else 
        {
             recSum(root,"");
        }
        for(String x: nums)
        {
            sum+=binToDec(x);
        }
        System.out.println(nums);
        return sum;
    }
    
    public void recSum(TreeNode root,String bin)
    {
        if(root==null)
        {
            return;
        }
        if(root.left==null && root.right==null)
        {
            nums.add(bin+root.val);
        }
        
        recSum(root.left,bin+(root.val));
        
        recSum(root.right,bin+(root.val));
        
    }
    public int binToDec(String bin)
    {
        int dec = 0;
        
        int i=bin.length()-1;
        while(i>=0)
        {
            if(bin.charAt(i)=='1')
            {
                dec += (int)Math.pow(2,bin.length()-1-i);
              
            }
              i--;
        }
        
        return dec;
    }
}
